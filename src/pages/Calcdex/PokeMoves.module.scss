@use 'config/colors';
@use 'config/fonts';
@use 'functions/color';
@use 'mixins/flex';
@use 'mixins/font';
@use 'mixins/position';
@use 'mixins/spacing';
@use 'mixins/transition';

.container {
  grid-template-columns: minmax(150px, 1.25fr) 1.15fr 1fr;
  column-gap: 10px;
  row-gap: 3px;
  @include spacing.margin($top: 15px);
  @include spacing.padding($top: 8px, $right: 10px, $bottom: 10px, $left: 10px);
  border-radius: 10px;
  @include transition.apply(background-color, box-shadow);

  &.light {
    background-color: color.alpha(colors.$white, 0.6);
    box-shadow: (
      0 0 1px color.alpha(colors.$black, 0.15),
      0 0 15px color.alpha(colors.$gray-dark, 0.15),
    );
  }

  &.dark {
    background-color: color.alpha(#121212, 0.85);
    box-shadow: (
      0 0 1px color.alpha(colors.$white, 0.3),
      0 0 15px color.alpha(colors.$black, 0.5),
    );
  }
}

.header {
  @include spacing.margin($bottom: 2px);
}

.headerTitle {
  @include spacing.margin($bottom: 0.5px);
  @include font.apply(fonts.$primary, ( font-weight: 500 ));
}

.movesHeader {
  @include flex.row($align: center);
  @include spacing.margin($left: 5px);
}

.dmgHeader {
  @include flex.row-center;
}

.label {
  font-weight: 500;
  text-transform: uppercase;
  user-select: none;

  .light & {
    color: color.alpha(colors.$black, 0.75);
  }

  .dark & {
    color: color.alpha(colors.$white, 0.75);
  }
}

.moveTooltip {
  @include flex.column-center;
  max-width: 160px;
  white-space: normal;
  user-select: none;
}

.moveDescription {
  @include spacing.margin($bottom: 0.4em);
  text-align: center;
}

.moveProperties {
  @include flex.row-center;
  font-size: 8px;
}

.moveType {
  @include spacing.margin($right: 0.8em);
}

.moveProperty {
  @include flex.row($align: center);

  &:not(:last-of-type) {
    @include spacing.margin($right: 0.8em);
  }

  .propertyName {
    font-weight: 500;
    text-transform: uppercase;
    opacity: 0.75;
  }

  .propertyValue {
    @include spacing.padding($left: 0.5em);
    @include font.apply(fonts.$mono);
    font-size: 10px;
  }
}

button.toggleButton {
  @include spacing.margin($left: 0.5em);
  font-size: 8px;

  &.lessSpacing {
    @include spacing.margin($left: 0.25em);
  }
}

// .toggleButtonLabel {
//   font-size: 8px;
//   text-transform: uppercase;
//
//   .light &.inactive {
//     color: colors.$black;
//   }
//
//   .dark &.inactive {
//     color: colors.$white;
//   }
// }

// button.autoButton {
//   @include spacing.margin($left: 2px, $right: -3px);
// }

button.ultButton {
  min-width: 25px;
}

button.damageButton {
  .light &:not(:hover):not(.active) .damageButtonLabel.noDamage {
    color: color.alpha(colors.$black, 0.5);
  }

  .dark &:not(:hover):not(.active) .damageButtonLabel.noDamage {
    color: color.alpha(colors.$white, 0.5);
  }

  // by default, a disabled button will have 0.3 opacity
  &.disabled {
    opacity: 1;
  }
}

.damageButtonLabel {
  .light & {
    color: colors.$black;
  }

  .dark & {
    color: colors.$white;
  }

  &.noCopy.noDamage {
    .light & {
      color: color.alpha(colors.$black, 0.5);
    }

    .dark & {
      color: color.alpha(colors.$white, 0.5);
    }
  }
}

.descTooltip {
  position: relative;
  max-width: 200px;
  text-align: center;
  white-space: normal;
  user-select: none;

  // .copied {
  //   @include position.absolute($top: -18px, $left: 50%);
  //   @include spacing.padding-xy($x: 10px, $y: 3px);
  //   @include font.apply(fonts.$primary, ( font-weight: 500 ));
  //   font-size: 10px;
  //   text-transform: uppercase;
  //   background-color: color.alpha(color.shade(colors.$green, 15%), 0.85);
  //   border-radius: 50px;
  //   box-shadow: 0 0 3px color.alpha(colors.$black, 0.3);
  //   opacity: 0;
  //   transform: translate(-50%, 5px);
  //   @include transition.apply(opacity, transform);
  //   user-select: none;
  //   pointer-events: none;
  //
  //   &.copiedVisible {
  //     opacity: 1;
  //     transform: translate(-50%, 0);
  //   }
  // }

  .copiedBadge {
    @include position.absolute($top: -16px, $left: 50%);
  }
}
