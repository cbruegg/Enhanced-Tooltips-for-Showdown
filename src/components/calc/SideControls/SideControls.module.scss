@use 'sass:map';
@use 'config/colors';
@use 'config/fonts';
@use 'functions/color';
@use 'mixins/flex';
@use 'mixins/font';
@use 'mixins/spacing';
@use 'mixins/transition';

$container: (
  border-width: 2px,
  border-radius: 16px,
);

.container {
  @include flex.row-start;
  border: map.get($container, border-width) solid;
  border-radius: map.get($container, border-radius);
  @include transition.apply(border-color);

  &.light {
    border-color: color.alpha(colors.$black, 0.08);
  }

  &.dark {
    border-color: color.alpha(colors.$white, 0.08);
  }
}

.sideLabel {
  $side-label-radius: map.get($container, border-radius) - map.get($container, border-width);

  @include flex.column-center;
  @include spacing.padding($x: 8px, $y: 2px);
  @include font.apply(fonts.$primary);
  border-radius: $side-label-radius 0 0 $side-label-radius;
  user-select: none;
  pointer-events: none;
  @include transition.apply(color, background-color);

  .light & {
    color: color.alpha(colors.$gray-darker, 0.4);
    background-color: color.alpha(colors.$black, 0.08);
  }

  .dark & {
    color: color.alpha(colors.$gray-lighter, 0.4);
    background-color: color.alpha(colors.$white, 0.08);
  }

  // .pretitle {
  //   font-weight: 500;
  //   font-size: 8px;
  //   letter-spacing: 0.5px;
  //   text-align: center;
  //   text-transform: uppercase;
  //   line-height: 11px;
  // }

  .letter {
    font-weight: 600;
    font-size: 16px;
    text-align: center;
    text-transform: uppercase;
    line-height: 19px;
  }
}

.actions {
  @include flex.row-center;
  @include spacing.padding($x: 8px);
}

button.actionButton {
  min-height: 11px;
  font-size: 8px;

  &:not(:last-child) {
    @include spacing.margin($right: 8px);
  }

  i {
    line-height: 7px;
  }

  & > *:not(:last-child) {
    @include spacing.margin($right: 1px);
  }
}
